openapi: 3.1.0
info: 
  title: Task API
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development servers
  - url: https://task-api-kn2b.onrender.com
    description: Producrtion server on rendered
tags:
  - name: Tasks
    description: Task-related endpoints

paths: 
  /tasks:
    get:
      summary: List all tasks
      tags:
        - Tasks
      parameters:
        - name: completed
          in: query
          required: false
          description: Filter tasks by completion status
          schema:
            type: boolean
            example: true
        - name: limit
          in: query
          required: false
          description: Maximum number of tasks to return
          schema: 
            type: integer
            example: 10
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Task'
    post: 
      summary: Create a new task
      tags:
        - Tasks
      requestBody: 
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created succesfully
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/ValidationError'
  /tasks/{id}:
    get:
      summary: Get a task by ID
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Task found and returned successfully
          content:
            application/json:
               schema:
                 $ref: '#/components/schemas/Task'
        '400':
           description: Validation error (invalid ID)
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ValidationError'
        '404':
           description: Task not found
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/NotFoundError'

components: 
  schemas:
    Task:
      type: object
      properties: 
        id:
          readOnly: true
          type: integer
          example: 1
        title: 
          type: string
          example: Buy groceries
        completed: 
          type: boolean
          example: false
    ValidationError:
      type: object
      properties:
        error:
          type: string
          example: validation failed
        details:
          type: array
          items: 
            type: string
    NotFoundError:
      type: object
      properties:
        error:
          type: string
          example: Task not found   

